template#xcircle-el
	style.
		.circle-el__title { color: orange; }
	span.circle-el__title My Circle Title
	p
	div
		#c1

//http://github.com/lugolabs/circles  
script.
	
	var CircleEl = Object.create(HTMLElement.prototype)
	CircleEl.createdCallback = function() {
		CircleEl._shadow = TW.attachShadow(this, '#xcircle-el')

		CircleEl._loaded = false//trap
		TS.load('https://cdn.rawgit.com/topseed/topseed-webcomps/master/_webComp/vendor/circlesMOD.js', CircleEl.loadedLib )
	}//created

	CircleEl.circle //circle implementation instance

	CircleEl.loadedLib = function(circleVal) {

		console.log('CircleEl.loadLib for value'+circleVal)
		if (CircleEl._loaded) return
		CircleEl._loaded = true
		console.log('loaded')
		TW.registerCustomElement('circle-el', CircleEl) 
		
		var c = CircleEl._shadow.getElementById('c1')
		CircleEl.circle = Circles.create({
			el:                  c,
			radius:              60,
			value:               circleVal||43,
			maxValue:            100,
			width:               10,
			text:                function(value){return value + '%';},
			colors:              ['#D3B6C6', '#4B253A'],
			duration:            400,
			wrpClass:            'circles-wrp',
			textClass:           'circles-text',
			valueStrokeClass:    'circles-valueStroke',
			maxValueStrokeClass: 'circles-maxValueStroke',
			styleWrapper:        true,
			styleText:           true
			})
	}//loaded

	CircleEl.init = function(_blx) {
		//blx = _blx //for outgoing only
		//listen 
		_blx.on('mySelection', function(data) { 
			CircleEl.circle.update(data.circleVal)
		})
		//same as:
		/*flyd.on(function(data) { 
				CircleEl.circle.update(data.circleVal)
		}, _blx.observer('mySelection'))*/

	}



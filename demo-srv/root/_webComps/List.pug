template#xlist-el
	style.
		.blist-el span { color: orange; }
		.blist-el li { color: orange; }
	.blist-el
		span My List Title
		#myList

script#Lst1Tpl(type='text/x-dot-template').
	<ul>
	{{~it.array :value:index}}
		<li><a onclick="ListEl.nav('{{=value.url}}','{{=value.circleVal}}','{{=value.gaugeVal}}')"> {{=value.head_line}}</a></li>
	{{~}}
	<ul>
script.
	//http://www.javascriptoo.com/dot-js
	console.log ('in temp list ') // don't forget #comps
	var blx = null
	var ListEl = Object.create(HTMLElement.prototype)
	ListEl.createdCallback = function() {
		ListEl._shadow = TW.attachShadow(this, '#xlist-el')
	}//()
	TW.registerCustomElement('list-el', ListEl) //could be in the page compInit callback
	
	ListEl.nav = function(url, circleVal, gaugeVal){
		if (confirm('Open '+url+'?'))
			window.open(url, "_blank")
		else if (blx) 
		{
			console.log('blx.emit')
			blx.emit('mySelection', {"circleVal": circleVal, "gaugeVal": gaugeVal})	
			console.log('blx.emit done')
		}	
	}

	ListEl.init = function(_blx) {
		console.log('ListEl.init, received _blx')
		blx = _blx
		//setup component communication, e.g.:
		//const $button1 = $('#button1', ListEl._shadow)
		//console.log($button1)
		//const clicks = flyd.stream()
		//button1.on('click', clicks)
		//blx.regObserver('mySelection', clicks)
		//_blx.reg('mySelection')
		
	}//()

	ListEl.list = function(values) {
		console.log('ListEl.list')
		const tpl = document.getElementById('Lst1Tpl').text
		var data2 = {'array': values}
		var res = TW.bind(tpl, data2)
		//console.log(res)
		const lst = ListEl._shadow.querySelector('#myList') 
		lst.innerHTML = res

		$("#myList", ListEl._shadow).append("<span id='list-ready'></span>")// SSR MAGIC!!
	}//()

